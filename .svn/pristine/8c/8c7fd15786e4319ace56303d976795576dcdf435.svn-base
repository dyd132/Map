<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
           >
		<!-- 数据库资源文件的位置及其名称 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="user" value="root"></property>
			<property name="password" value="root"></property>
			<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
			<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/car?characterEncoding=UTF-8"></property>
		</bean>	
			
	<!-- 配置mybatis所需要的会话工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>	
		
		
		<!-- 配置mapper扫描器 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 指定mapper自动扫描的包 -->
			<property name="basePackage" value="com.car.mapper"></property>
			<!-- 配置mapper所使用的会话工厂 -->
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		</bean>
		
		
		<!-- 事务的相关配置-->
		
			<!--配置事务管理器 -->
			  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
           		<!-- 数据源 -->
           		<property name="dataSource" ref="dataSource"></property>
           </bean>
			
			<!-- 配置通知 -->
			
				 <!-- 通知 -->
           <tx:advice id="txAdvice" transaction-manager="transactionManager">
           		<tx:attributes>
           			<!-- 传播行为 -->
           			<tx:method name="save*" propagation="REQUIRED"/>
           			<tx:method name="delete*" propagation="REQUIRED"/>
           			<tx:method name="insert*" propagation="REQUIRED"/>
           			<tx:method name="update*" propagation="REQUIRED"/>
           			<tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
           			<tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
           			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
           		</tx:attributes>
           </tx:advice>
			
			<!-- 配置管理事务所需要的aop -->
			<aop:config>
           		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.car.service.impl.*.*(..))"/>
           </aop:config>




	<!-- 工作的bean -->
	<!-- <bean id="myJob" class="com.baidu.service.impl.MailServiceImpl" />
 -->
	<!-- job的配置开始 -->
	<!-- <bean id="myJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="myJob" />
		</property>
		<property name="targetMethod">
			<value>sendMail</value>
		</property>
	</bean> -->
	<!-- job的配置结束 -->


	<!--调度的配置开始 -->
	<!-- <bean id="crontestJobTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="myJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 0/1 * * * ?</value>  Cron表达式“10 */1 * * * ?”意为：从10秒开始，每1分钟执行一次。
		</property>
	</bean> -->
	<!-- 调度的配置结束 -->


	<!--启动触发器的配置开始 -->
	<!-- <bean name="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="crontestJobTrigger" />
			</list>
		</property>
	</bean> -->
	
	<!--启动触发器的配置结束 -->
           
</beans>